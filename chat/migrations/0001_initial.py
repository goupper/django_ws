# Generated by Django 2.2.2 on 2019-06-25 03:35

import chat.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[chat.models.CustomUnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telephone', models.CharField(blank=True, max_length=11, unique=True, verbose_name='手机号')),
                ('vip_recommend_id', models.SmallIntegerField(blank=True, default=0, help_text='-1: 会员过期,0: 非会员,大于0: 具体的会员等级', verbose_name='vip等级')),
                ('user_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Normal'), (2, 'Sale')], default=1, verbose_name='用户类型')),
                ('gender', models.PositiveSmallIntegerField(blank=True, choices=[(1, '男'), (2, '女')], default=1, verbose_name='性别')),
                ('login_time', models.DateTimeField(blank=True, null=True, verbose_name='登录时间')),
                ('public_message_id', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='公共消息阅读id')),
                ('city_id', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='所在城市id')),
                ('head_pic', models.CharField(blank=True, default='', max_length=64, verbose_name='头像')),
                ('vip_start_time', models.DateTimeField(blank=True, null=True)),
                ('vip_end_time', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', chat.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('is_delete', models.BooleanField(blank=True, default=False)),
                ('name', models.CharField(blank=True, max_length=64, verbose_name='name')),
                ('label', models.CharField(blank=True, max_length=32, verbose_name='label uuid')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Room',
                'verbose_name_plural': 'Room',
            },
        ),
        migrations.CreateModel(
            name='RoomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('is_delete', models.BooleanField(blank=True, default=False)),
                ('is_owner', models.BooleanField(blank=True, default=False, verbose_name='Is Owner')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_users', to='chat.Room')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_rooms', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'RoomUser',
                'verbose_name_plural': 'RoomUser',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, verbose_name='content')),
                ('send_time', models.DateTimeField(auto_now_add=True, verbose_name='send time')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chat.Room')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_messages', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Message',
            },
        ),
        migrations.AddIndex(
            model_name='roomuser',
            index=models.Index(fields=['is_owner'], name='chat_roomus_is_owne_6db3cc_idx'),
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['label'], name='chat_room_label_36683f_idx'),
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['create_time'], name='chat_room_create__75dbde_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['send_time'], name='chat_messag_send_ti_5ac884_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['telephone'], name='chat_user_telepho_dc961c_idx'),
        ),
    ]
